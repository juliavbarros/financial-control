@{
    ViewData["Title"] = "Home Page";
}

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">Dashboard</h1>
            </div><!-- /.col -->
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">Dashboard v1</li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>

<section class="content">
    <div class="container-fluid">
        <!-- Small boxes (Stat box) -->
        <div class="row">
            <div class="col-lg-3 col-6">
                <!-- small box -->
                <div class="small-box bg-info">
                    <div class="inner">
                        <h3>150</h3>

                        <p>New Orders</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-bag"></i>
                    </div>
                    <a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
                </div>
            </div>
            <!-- ./col -->
            <div class="col-lg-3 col-6">
                <!-- small box -->
                <div class="small-box bg-success">
                    <div class="inner">
                        <h3>53<sup style="font-size: 20px">%</sup></h3>

                        <p>Bounce Rate</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-stats-bars"></i>
                    </div>
                    <a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
                </div>
            </div>
            <!-- ./col -->
            <div class="col-lg-3 col-6">
                <!-- small box -->
                <div class="small-box bg-warning">
                    <div class="inner">
                        <h3>44</h3>

                        <p>User Registrations</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-person-add"></i>
                    </div>
                    <a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
                </div>
            </div>
            <!-- ./col -->
            <div class="col-lg-3 col-6">
                <!-- small box -->
                <div class="small-box bg-danger">
                    <div class="inner">
                        <h3>65</h3>

                        <p>Unique Visitors</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-pie-graph"></i>
                    </div>
                    <a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
                </div>
            </div>
            <!-- ./col -->
        </div>
        <!-- /.row -->
        <!-- Main row -->
        <div class="row">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-6">
                        <div class="card card-success">
                            <div class="card-header">
                                <h3 class="card-title">Receitas e Despesas</h3>

                                <div class="card-tools">
                                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                        <i class="fas fa-minus"></i>
                                    </button>
                                    <button type="button" class="btn btn-tool" data-card-widget="remove">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="chart">
                                    <div class="chartjs-size-monitor"><div class="chartjs-size-monitor-expand"><div class=""></div></div><div class="chartjs-size-monitor-shrink"><div class=""></div></div></div>
                                    <canvas id="stackedBarChart" style="min-height: 350px; height: 350px; max-height: 350px; max-width: 100%;"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card card-danger">
                            <div class="card-header">
                                <h3 class="card-title">Despesas</h3>

                                <div class="card-tools">
                                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                        <i class="fas fa-minus"></i>
                                    </button>
                                    <button type="button" class="btn btn-tool" data-card-widget="remove">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="chartjs-size-monitor"><div class="chartjs-size-monitor-expand"><div class=""></div></div><div class="chartjs-size-monitor-shrink"><div class=""></div></div></div>
                                <canvas id="pieChart" style="min-height: 350px; height: 350px; max-height: 350px; max-width: 100%;"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


@section scripts
    {
    <!-- DataTables  & Plugins -->
    <script src="~/adminlte/plugins/datatable/jquery.datatables.min.js"></script>
    <script src="~/adminlte/plugins/datatable/datatables.bootstrap4.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@0.4.0/dist/chartjs-plugin-datalabels.min.js"></script>

    <script>
        function renderStackedBarChart() {
            $(function () {
                function getMonthLabels() {
                    const months = [
                        'Janeiro',
                        'Fevereiro',
                        'Março',
                        'Abril',
                        'Maio',
                        'Junho',
                        'Julho',
                        'Agosto',
                        'Setembro',
                        'Outubro',
                        'Novembro',
                        'Dezembro'
                    ];

                    const currentDate = new Date();
                    const currentMonth = currentDate.getMonth();

                    // Generate labels from January to the current month
                    const labels = months.slice(0, currentMonth + 1);

                    return labels;
                }

                function fetchDataAndUpdateChart() {
                    $.ajax({
                        url: "/Expense/GetRevenueExpensesData",
                        method: 'GET',
                        success: function (response) {

                            // Assuming the response is an array of data points for each dataset
                            var barChartData = {
                                labels: getMonthLabels(),
                                datasets: [
                                    {
                                        label: 'Despesas',
                                        backgroundColor: 'rgba(60,141,188,0.9)',
                                        borderColor: 'rgba(60,141,188,0.8)',
                                        pointRadius: false,
                                        pointColor: '#3b8bba',
                                        pointStrokeColor: 'rgba(60,141,188,1)',
                                        pointHighlightFill: '#fff',
                                        pointHighlightStroke: 'rgba(60,141,188,1)',
                                        data: response.datasets[0].data // Update the first dataset
                                    },
                                    {
                                        label: 'Recebimento',
                                        backgroundColor: 'rgba(210, 214, 222, 1)',
                                        borderColor: 'rgba(210, 214, 222, 1)',
                                        pointRadius: false,
                                        pointColor: 'rgba(210, 214, 222, 1)',
                                        pointStrokeColor: '#c1c7d1',
                                        pointHighlightFill: '#fff',
                                        pointHighlightStroke: 'rgba(220,220,220,1)',
                                        data: response.datasets[1].data // Update the second dataset
                                    },
                                ]
                            };

                            // Get the canvas element
                            var chartCanvas = $('#stackedBarChart').get(0).getContext('2d');

                            var stackedBarChartOptions = {
                                responsive: true,
                                maintainAspectRatio: false,
                                scales: {
                                    xAxes: [{
                                        stacked: true,
                                    }],
                                    yAxes: [{
                                        stacked: true
                                    }]
                                }
                            }

                            // Create the chart
                            new Chart(chartCanvas, {
                                type: 'bar',
                                data: barChartData,
                                options: stackedBarChartOptions
                            });
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching data:', error);
                        }
                    });
                }

                // Call the function to fetch data and update the chart on page render
                fetchDataAndUpdateChart();
            });
        }

        function renderPieChart() {
            $(function () {

                $.ajax({
                    url: "/Expense/GetExpensesByCategoryData",
                    method: 'GET',
                    success: function (response) {

                        var pieData = {
                            labels: response.labels,
                            datasets: [
                                {
                                    data: response.datasets[0].data,
                                    backgroundColor: ['#ee5b48', '#009d4e', '#ea9200', '#00b7ea', '#1385b8', '#c5ccdb', '#712428', '#3960ed', '#0a5043', '#0251d8', '#d6b211', '#64ab90', '#67b309', '#b53121', '#514b66', '#c6bd08', '#eb2c86', '#ba465f', '#cb018b', '#a328c0', '#c4217d', '#ebfe2e', '#efc225', '#6a83b2', '#9acdb3', '#8d132e', '#84b59c', '#c751be', '#b28bde', '#fdde5b'],
                                }
                            ]
                        }

                        // Get the canvas element
                        var pieChartCanvas = $('#pieChart').get(0).getContext('2d');

                        var pieOptions = {
                            maintainAspectRatio: false,
                            responsive: true,
                            plugins: {
                                tooltip: {
                                    callbacks: {
                                        label: function (context) {
                                            var value = context.raw;
                                            var percentage = ((value / pieData.datasets[0].data.reduce((a, b) => a + b)) * 100).toFixed(2) + "%";
                                            return percentage;
                                        }
                                    }
                                },
                                datalabels: {
                                    formatter: function (value, context) {
                                        var percentage = ((value / pieData.datasets[0].data.reduce((a, b) => a + b)) * 100).toFixed(2) + "%";
                                        return percentage;
                                    },
                                    color: '#fff'
                                }
                            }
                        }

                        //Create pie or doughnut chart
                        // You can switch between pie and doughnut using the method below.
                        new Chart(pieChartCanvas, {
                            type: 'pie',
                            data: pieData,
                            options: {
                                maintainAspectRatio: false,
                                responsive: true,
                                plugins: {
                                    datalabels: pieOptions.plugins.datalabels // Include the datalabels plugin here
                                }
                            }
                        })
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching data:', error);
                    }
                });
            });
        }

        // Call the renderBarChart function when the page finishes loading
        $(document).ready(function () {
            renderStackedBarChart();
            renderPieChart();
        });
    </script>
}
